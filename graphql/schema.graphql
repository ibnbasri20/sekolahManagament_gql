"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-01-01 13:00:00`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"Can be used as an argument to upload files using https://github.com/jaydenseric/graphql-multipart-request-spec" 
scalar Upload @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Upload")

"A date string with format `Y-m-d`, e.g. `2011-05-23`."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

type Query {
    users: [User!]! @paginate(defaultCount: 10, model:"App\\Models\\UserModel")
    siswa(nama:String): [Siswa]! @paginate(builder: "App\\Murid@cari",defaultCount: 10,type: "paginator" model: "SiswaModel")
}

type Mutation {
    Auth(username: String @rules(apply: ["required"])password: String): String!
    upload(file: [Upload]!): String!
    CreateSiswa(
    nis: Int @rules(apply: ["required"])
    nama: String @rules(apply: ["required"])
    kelas: String @rules(apply: ["required"])    
    alamat: String @rules(apply: ["required"])    
    umur: String @rules(apply: ["required"])):Siswa
    siswaImports(file: Upload!):String @field(resolver: "App\\GraphQL\\Mutations\\siswaImports@resolve")
    deleteSiswa(id:Int):deleteResponse @field(resolver: "App\\GraphQL\\Mutations\\deleteSiswa@resolve")

}

type deleteResponse{
    status:String
}

type Login {
    username:String,
    password:String
}

type Siswa {
    nis:Int,
    nama:String,
    kelas:String,
    alamat:String,
    umur:String
}

input siswaCrate{
    nama: String @rules(apply: ["required"])
    kelas: String @rules(apply: ["required"])    
    alamat: String @rules(apply: ["required"])    
    umur: String @rules(apply: ["required"])    
}

input Uploads {
    id:ID,
    file:Upload
}

input authCrate{
    username: String @rules(apply: ["required"])
    password: String @rules(apply: ["required"])    
}


type User {
    nama: String!
}
